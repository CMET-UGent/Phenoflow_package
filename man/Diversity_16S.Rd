% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Diversity_16S.R
\name{Diversity_16S}
\alias{Diversity_16S}
\title{Diversity function for 16S amplicon data}
\usage{
Diversity_16S(x, R = 999)
}
\arguments{
\item{x}{phyloseq object generated by the phyloseq package}

\item{R}{Number of bootstraps to conduct. Defaults to 999}
}
\description{
This function calculates Hill diversity metrics from 16S amplicon data (in phyloseq format).
D0 (richness) is calculated with three methods: 1) Observed richness, 2) Chao1 estimator
3) breakaway method (Willis and Bunge 2016). D1 (exponential of Shannon entropy)
and D2 (inverse Simpson index) are respectively Hill order 1 and 2
Errors for D1 and D2 are calculated by bootstrapping.
}
\examples{
 

## Short example

# Load precomputed fingerprint object
data(CoolingTower)

# Calculate diversity values
Diversity(CoolingTower, plot=TRUE)

## Full data processing example

# Load raw data (imported using flowCore)
data(flowData)
# Asinh transform and select parameters of interest 
(cells were stained with Sybr Green I).
flowData_transformed <- transform(flowData,`FL1-H`=asinh(`FL1-H`),
`SSC-H`=asinh(`SSC-H`), 
`FL3-H`=asinh(`FL3-H`), 
`FSC-H`=asinh(`FSC-H`))
param=c("FL1-H", "FL3-H","SSC-H","FSC-H")
flowData_transformed = flowData_transformed[,param]

# Create a PolygonGate for denoising the dataset
# Define coordinates for gate in sqrcut1 in format: c(x,x,x,x,y,y,y,y)
sqrcut1 <- matrix(c(8.75,8.75,14,14,3,7.5,14,3),ncol=2, nrow=4)
colnames(sqrcut1) <- c("FL1-H","FL3-H")
polyGate1 <- polygonGate(.gate=sqrcut1, filterId = "Total Cells")

# Gating quality check
xyplot(`FL3-H` ~ `FL1-H`, data=flowData_transformed[1], filter=polyGate1,
scales=list(y=list(limits=c(0,14)),
 x=list(limits=c(6,16))),
 axis = axis.default, nbin=125, 
 par.strip.text=list(col="white", font=2, cex=2), smooth=FALSE)
 
 # Isolate only the cellular information based on the polyGate1
 flowData_transformed <- Subset(flowData_transformed, polyGate1)
 
 # Normalize parameter values to [0,1] interval based on max. value across parameters
 summary <- fsApply(x=flowData_transformed,FUN=function(x) apply(x,2,max),use.exprs=TRUE)
 max = max(summary[,1])
 mytrans <- function(x) x/max
 flowData_transformed <- transform(flowData_transformed,`FL1-H`=mytrans(`FL1-H`),
 `FL3-H`=mytrans(`FL3-H`), 
 `SSC-H`=mytrans(`SSC-H`),
 `FSC-H`=mytrans(`FSC-H`))
 
 # Calculate fingerprint
 fbasis <- flowBasis(flowData_transformed, param, nbin=128, 
 bw=0.01,normalize=function(x) x)
 
 # Calculate diversity
 Diversity(fbasis, plot=TRUE)

}
\keyword{alpha}
\keyword{diversity,}
\keyword{fcm,}

